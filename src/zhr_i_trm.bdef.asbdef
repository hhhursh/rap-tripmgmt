unmanaged implementation in class zbp_hr_i_trm unique;
strict ( 2 );


define behavior for zhr_i_trm //alias <alias_name>
//persistent table zhr_trm_bkghd
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;
  field ( readonly ) BookingID;
  association trmaap { create; }
  association trmpab { create; }
  association trmpax { create; }
  //  association trmpay { create; }


  mapping for zhr_trm_bkghd
    {
      BookingID       = bkgid;
      Cost_INR        = tlcost;
      Currency        = curr;
      StartDate       = strdat;
      EndDate         = enddat;
      BkgStat         = bkgstat;
      CreationDate    = erdat;
      LastChangedDate = aedat;
      CreatedBy       = ernam;
      LastChangedBy   = aenam;
    }
}

define behavior for zhr_i_trmaap //alias <alias_name>
//persistent table zhr_trm_aap
lock dependent by _Bookings
authorization dependent by _Bookings

{
  update;
  delete;
  field ( readonly ) Bkgid;
  field ( readonly : update ) Aapid, Pabid;
  association _Bookings;
}

define behavior for zhr_i_trmpab //alias <alias_name>
//persistent table zhr_trm_pab
lock dependent by _Bookings
authorization dependent by _Bookings
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) Pabid, Bkgid;
  association _Bookings;
}

define behavior for zhr_i_trmpax //alias <alias_name>
//persistent table zhr_trm_pax
lock dependent by _Bookings
authorization dependent by _Bookings
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) Paxid, Bkgid;
  association _Bookings;
}

//define behavior for zhr_i_trmpay //alias <alias_name>
//persistent table zhr_trm_pay
//lock dependent by _Bookings
//authorization dependent by _Bookings
////etag master <field_name>
//{
//  update;
//  delete;
//  field ( readonly ) Payid, Bkgid;
//  association _Bookings;
//}